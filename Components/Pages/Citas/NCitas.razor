@page "/agregar/cita"
@rendermode InteractiveServer
@inject NavigationManager Navigation
@inject DatabaseService Db

<PageTitle>Nueva Cita</PageTitle>

<div class="top-row px-4">
    <h4 class="m-0">Nueva Cita</h4>
</div>

<article class="m-4">
    <FCitas Cita="_cita"
            Pacientes="_pacientes"
            Medicos="_medicos"
            BotonTexto="Agregar"
            OnSubmit="Agregar" />
</article>

@code {
    private List<Paciente> _pacientes = new();
    private List<Medico> _medicos = new();
    private Cita _cita = new();

    protected override async Task OnInitializedAsync()
    {
        var pacientesRaw = await Db.QueryAsync("SELECT id_paciente, nombre_completo FROM Pacientes");
        _pacientes = pacientesRaw
            .Select(p => new Paciente
                {
                    IdPaciente = p["id_paciente"]?.ToString() ?? "",
                    NombreCompleto = p["nombre_completo"]?.ToString() ?? ""
                })
            .ToList();

        var medicosRaw = await Db.QueryAsync("SELECT id_medico, nombre_completo FROM Medicos");
        _medicos = medicosRaw
            .Select(m => new Medico
                {
                    IdMedico = m["id_medico"]?.ToString() ?? "",
                    NombreCompleto = m["nombre_completo"]?.ToString() ?? ""
                })
            .ToList();
    }

    private async Task Agregar()
    {
        const string sql = @"
            INSERT INTO Citas
                (id_paciente, id_medico, fecha, hora, estado)
            VALUES
                (@id_paciente, @id_medico, @fecha, @hora, @estado)";

        var parametros = new Dictionary<string, object>
            {
                ["@id_paciente"] = _cita.IdPaciente,
                ["@id_medico"] = _cita.IdMedico,
                ["@fecha"] = _cita.Fecha,
                ["@hora"] = _cita.Hora,
                ["@estado"] = _cita.Estado
            };

        await Db.ExecuteAsync(sql, parametros);
        Navigation.NavigateTo("/citas");
    }
}
